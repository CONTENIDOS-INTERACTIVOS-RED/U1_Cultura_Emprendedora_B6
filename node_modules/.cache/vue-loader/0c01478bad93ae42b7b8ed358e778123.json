{"remainingRequest":"/home/runner/work/U1_Cultura_Emprendedora_B6/U1_Cultura_Emprendedora_B6/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Cultura_Emprendedora_B6/U1_Cultura_Emprendedora_B6/src/views/curso/Tema4.vue?vue&type=template&id=2f05055a&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Cultura_Emprendedora_B6/U1_Cultura_Emprendedora_B6/src/views/curso/Tema4.vue","mtime":1743688539012},{"path":"/home/runner/work/U1_Cultura_Emprendedora_B6/U1_Cultura_Emprendedora_B6/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Cultura_Emprendedora_B6/U1_Cultura_Emprendedora_B6/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Cultura_Emprendedora_B6/U1_Cultura_Emprendedora_B6/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Cultura_Emprendedora_B6/U1_Cultura_Emprendedora_B6/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Cultura_Emprendedora_B6/U1_Cultura_Emprendedora_B6/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}